C51 COMPILER V9.00   SOUND_DRIVES                                                          05/17/2023 19:41:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SOUND_DRIVES
OBJECT MODULE PLACED IN .\output\Sound_Drives.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE src\Sound_Drives.c LARGE BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\output\Sound_Drives.lst) OBJECT(.\output\Sound_Drives.obj)

line level    source

   1          #include "config.h"
   2          
   3          uint8 freq_load[16][2];
   4          uint16 data sound_cnt_time = 0;
   5          uint8 (*music_p)[2] = 0;
   6          uint8 s_p=0;//音乐指针
   7          
   8          void Sound_Freq_Init()  //在开机时计算出原始频率数据在当前晶振频率下定时器的装载值
   9          {
  10   1              //原始频率数据
  11   1              code uint16 prime_freq[16]=
  12   1              {
  13   1                      0xffff,
  14   1                      /*M*/523,587,659,698,784,880,988,
  15   1                      /*H*/1046,1175,1318,1397,1568,1760,1967,
  16   1                      0
  17   1              };
  18   1              uint16 load_vaule = 0;
  19   1              uint8 i = 0;
  20   1              do
  21   1              {
  22   2                      load_vaule = (65536-(FOSC/prime_freq[i]));//初始化计时值
  23   2                      freq_load[i][0] = load_vaule;
  24   2                      freq_load[i][1] = load_vaule >>8;
  25   2              }while(prime_freq[++i]);
  26   1      }
  27          
  28          void Sound_Init(void)           //@24.000MHz
  29          {
  30   1          AUXR |= 0x04;                   //定时器2为1T模式
  31   1      //  AUXR &= ~0x04;                  //定时器2为12T模式
  32   1      //  T2L = T1MS;                     //初始化计时值
  33   1      //  T2H = T1MS >> 8;
  34   1      //  AUXR |= 0x10;                   //定时器2开始计时
  35   1          IE2 |= 0x04;                    //开定时器2中断
  36   1          EA = 1;
  37   1              beep = 1;       //关闭蜂鸣器
  38   1              sound_cnt_time=0;
  39   1              (*music_p)[2] = 0;
  40   1              TR2_OFF;
  41   1              Sound_Freq_Init();
  42   1      }
  43          
  44          void Sound_Tone(bit ON_OFF,uint8 freq,uint8 s_tms)  //freqx>367
  45          {
  46   1              if(ON_OFF)
  47   1              {
  48   2                      T2L = freq_load[freq][0];
  49   2                      T2H = freq_load[freq][1];
  50   2                      if(s_tms == 0xff) sound_cnt_time = 0xffff;
  51   2                      else    sound_cnt_time = (uint16)s_tms*10;
  52   2                      TR2_NO;
  53   2              }
  54   1      }
C51 COMPILER V9.00   SOUND_DRIVES                                                          05/17/2023 19:41:50 PAGE 2   

  55          
  56          void Play_Music(uint8 (*sound)[2])
  57          {
  58   1              if(sound_ON){
  59   2                      s_p=0;
  60   2                      sound_cnt_time = 0;
  61   2                      music_p = sound;
  62   2                      TR2_NO;
  63   2              }
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    244    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =     36       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
